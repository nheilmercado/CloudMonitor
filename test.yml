trigger:
- dev

parameters:
- name: ServiceConn
  displayName: ServiceConn
  type: string
  default: PROD-connection-dd
- name: PowerBiServiceConn
  displayName: PowerBiServiceConn
  type: string
  default: Power-bi conn
- name: groupvariables
  type: object
  default:
   - CloudMonitorDDev

variables:
  buildConfiguration: 'Release'
  MasterDataSync: 'MasterDataSync'
  MasterCostSync: 'MasterCostSync'
  MasterAutoTaggingSync: 'MasterAutoTaggingSync'

stages:

- stage: 'DeployDB'
  displayName: 'Deploy to SQL Database'
  pool:
    name: DevOpsBuildAgentProdWindowsPool
  jobs:
  - ${{ each group in parameters.groupvariables }}:
      - job:
        displayName: 'Deploy to SQL Database'
        variables:
        - group: Release for Foundation Function Apps ${{ group }}
        steps:
        - task: AzurePowerShell@5
          inputs:
            azureSubscription: '${{ parameters.ServiceConn }}'
            ScriptType: 'InlineScript'       
            Inline: |
                Import-Module Az.Accounts
                Import-Module Az.KeyVault
                $Context = Get-AzContext
                Set-AzKeyVaultAccessPolicy -VaultName $(resourceGroupLowerCase)-KV -ServicePrincipalName $Context.Account.Id -PermissionsToSecrets Get,List,Set
            azurePowerShellVersion: 'LatestVersion'
        - task: AzureKeyVault@1
          displayName: 'Download Keyvault'
          inputs:
            azureSubscription: '${{ parameters.ServiceConn }}'
            KeyVaultName: '$(resourceGroupLowerCase)-KV'
            SecretsFilter: '*'
            RunAsPreJob: false
        - task: AzurePowerShell@5
          displayName: 'Update Credential for non env'
          inputs:
            azureSubscription: '${{ parameters.ServiceConn }}'
            ScriptType: 'FilePath'
            ScriptPath: '$(System.DefaultWorkingDirectory)\Refresh Script\BiPowershellNonEnv.ps1'
            ScriptArguments: '-Customer $(Customer) -vaultname $(resourceGroupLowerCase)-KV -PowerBiClientId $(PowerBiClientId) -PowerBiClientSecretKey $(PowerBiClientSecretKey) -tenantId $(TENANT-ID-DD)'
            azurePowerShellVersion: 'LatestVersion'
          condition: eq(variables.Environment, '')
        - task: PowerShell@2
          inputs:
            filePath: '$(System.DefaultWorkingDirectory)\Refresh Script\BiPowershell.ps1'
            arguments: '-Environment $(BiEnvironment) -Customer $(Customer) -vaultname $(resourceGroupLowerCase)-KV -PowerBiClientId $(PowerBiClientId) -PowerBiClientSecretKey $(PowerBiClientSecretKey) -tenantId $(TENANT-ID-DD)'
            pwsh: true
        - task: AzurePowerShell@5
          displayName: 'Update credentials'
          inputs:
            azureSubscription: '${{ parameters.ServiceConn }}'
            ScriptType: 'FilePath'
            ScriptPath: '$(System.DefaultWorkingDirectory)\Refresh Script\BiPowershell.ps1'
            ScriptArguments: '-Environment $(BiEnvironment) -Customer $(Customer) -vaultname $(resourceGroupLowerCase)-KV -PowerBiClientId $(PowerBiClientId) -PowerBiClientSecretKey $(PowerBiClientSecretKey) -tenantId $(TENANT-ID-DD)'
            azurePowerShellVersion: 'LatestVersion'
          condition: ne(variables.Environment, '')

